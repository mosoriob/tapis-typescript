/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Systems API
 * The Tapis Systems API provides for management of Tapis Systems including transfer methods, permissions and credentials.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CategoryEnum,
    CategoryEnumFromJSON,
    CategoryEnumFromJSONTyped,
    CategoryEnumToJSON,
    DatatypeEnum,
    DatatypeEnumFromJSON,
    DatatypeEnumFromJSONTyped,
    DatatypeEnumToJSON,
} from './';

/**
 * 
 * @export
 * @interface Capability
 */
export interface Capability {
    /**
     * 
     * @type {CategoryEnum}
     * @memberof Capability
     */
    category?: CategoryEnum;
    /**
     * 
     * @type {string}
     * @memberof Capability
     */
    name?: string;
    /**
     * 
     * @type {DatatypeEnum}
     * @memberof Capability
     */
    datatype?: DatatypeEnum;
    /**
     * 
     * @type {number}
     * @memberof Capability
     */
    precedence?: number;
    /**
     * 
     * @type {string}
     * @memberof Capability
     */
    value?: string;
}

export function CapabilityFromJSON(json: any): Capability {
    return CapabilityFromJSONTyped(json, false);
}

export function CapabilityFromJSONTyped(json: any, ignoreDiscriminator: boolean): Capability {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'category': !exists(json, 'category') ? undefined : CategoryEnumFromJSON(json['category']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'datatype': !exists(json, 'datatype') ? undefined : DatatypeEnumFromJSON(json['datatype']),
        'precedence': !exists(json, 'precedence') ? undefined : json['precedence'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function CapabilityToJSON(value?: Capability | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'category': CategoryEnumToJSON(value.category),
        'name': value.name,
        'datatype': DatatypeEnumToJSON(value.datatype),
        'precedence': value.precedence,
        'value': value.value,
    };
}


