/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Systems API
 * The Tapis Systems API provides for management of Tapis Systems including transfer methods, permissions and credentials.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AuthnEnum,
    AuthnEnumFromJSON,
    AuthnEnumFromJSONTyped,
    AuthnEnumToJSON,
    Capability,
    CapabilityFromJSON,
    CapabilityFromJSONTyped,
    CapabilityToJSON,
    Credential,
    CredentialFromJSON,
    CredentialFromJSONTyped,
    CredentialToJSON,
    JobRuntime,
    JobRuntimeFromJSON,
    JobRuntimeFromJSONTyped,
    JobRuntimeToJSON,
    KeyValuePair,
    KeyValuePairFromJSON,
    KeyValuePairFromJSONTyped,
    KeyValuePairToJSON,
    LogicalQueue,
    LogicalQueueFromJSON,
    LogicalQueueFromJSONTyped,
    LogicalQueueToJSON,
    SystemTypeEnum,
    SystemTypeEnumFromJSON,
    SystemTypeEnumFromJSONTyped,
    SystemTypeEnumToJSON,
    TransferMethodEnum,
    TransferMethodEnumFromJSON,
    TransferMethodEnumFromJSONTyped,
    TransferMethodEnumToJSON,
} from './';

/**
 * 
 * @export
 * @interface TSystem
 */
export interface TSystem {
    /**
     * 
     * @type {number}
     * @memberof TSystem
     */
    seqId?: number;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    tenant?: string;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    description?: string;
    /**
     * 
     * @type {SystemTypeEnum}
     * @memberof TSystem
     */
    systemType?: SystemTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    owner?: string;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    host?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TSystem
     */
    enabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    effectiveUserId?: string;
    /**
     * 
     * @type {AuthnEnum}
     * @memberof TSystem
     */
    defaultAuthnMethod?: AuthnEnum;
    /**
     * 
     * @type {Credential}
     * @memberof TSystem
     */
    authnCredential?: Credential;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    bucketName?: string;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    rootDir?: string;
    /**
     * 
     * @type {Array<TransferMethodEnum>}
     * @memberof TSystem
     */
    transferMethods?: Array<TransferMethodEnum>;
    /**
     * 
     * @type {number}
     * @memberof TSystem
     */
    port?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TSystem
     */
    useProxy?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    proxyHost?: string;
    /**
     * 
     * @type {number}
     * @memberof TSystem
     */
    proxyPort?: number;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    dtnSystemId?: string;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    dtnMountPoint?: string;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    dtnMountSourcePath?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TSystem
     */
    isDtn?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TSystem
     */
    canExec?: boolean;
    /**
     * 
     * @type {Array<JobRuntime>}
     * @memberof TSystem
     */
    jobRuntimes?: Array<JobRuntime>;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    jobWorkingDir?: string;
    /**
     * 
     * @type {Array<KeyValuePair>}
     * @memberof TSystem
     */
    jobEnvVariables?: Array<KeyValuePair>;
    /**
     * 
     * @type {number}
     * @memberof TSystem
     */
    jobMaxJobs?: number;
    /**
     * 
     * @type {number}
     * @memberof TSystem
     */
    jobMaxJobsPerUser?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TSystem
     */
    jobIsBatch?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    batchScheduler?: string;
    /**
     * 
     * @type {Array<LogicalQueue>}
     * @memberof TSystem
     */
    batchLogicalQueues?: Array<LogicalQueue>;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    batchDefaultLogicalQueue?: string;
    /**
     * 
     * @type {Array<Capability>}
     * @memberof TSystem
     */
    jobCapabilities?: Array<Capability>;
    /**
     * 
     * @type {Array<string>}
     * @memberof TSystem
     */
    tags?: Array<string>;
    /**
     * 
     * @type {object}
     * @memberof TSystem
     */
    notes?: object;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    importRefId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TSystem
     */
    deleted?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof TSystem
     */
    updated?: string;
}

export function TSystemFromJSON(json: any): TSystem {
    return TSystemFromJSONTyped(json, false);
}

export function TSystemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TSystem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'seqId': !exists(json, 'seqId') ? undefined : json['seqId'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'systemType': !exists(json, 'systemType') ? undefined : SystemTypeEnumFromJSON(json['systemType']),
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'host': !exists(json, 'host') ? undefined : json['host'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'effectiveUserId': !exists(json, 'effectiveUserId') ? undefined : json['effectiveUserId'],
        'defaultAuthnMethod': !exists(json, 'defaultAuthnMethod') ? undefined : AuthnEnumFromJSON(json['defaultAuthnMethod']),
        'authnCredential': !exists(json, 'authnCredential') ? undefined : CredentialFromJSON(json['authnCredential']),
        'bucketName': !exists(json, 'bucketName') ? undefined : json['bucketName'],
        'rootDir': !exists(json, 'rootDir') ? undefined : json['rootDir'],
        'transferMethods': !exists(json, 'transferMethods') ? undefined : ((json['transferMethods'] as Array<any>).map(TransferMethodEnumFromJSON)),
        'port': !exists(json, 'port') ? undefined : json['port'],
        'useProxy': !exists(json, 'useProxy') ? undefined : json['useProxy'],
        'proxyHost': !exists(json, 'proxyHost') ? undefined : json['proxyHost'],
        'proxyPort': !exists(json, 'proxyPort') ? undefined : json['proxyPort'],
        'dtnSystemId': !exists(json, 'dtnSystemId') ? undefined : json['dtnSystemId'],
        'dtnMountPoint': !exists(json, 'dtnMountPoint') ? undefined : json['dtnMountPoint'],
        'dtnMountSourcePath': !exists(json, 'dtnMountSourcePath') ? undefined : json['dtnMountSourcePath'],
        'isDtn': !exists(json, 'isDtn') ? undefined : json['isDtn'],
        'canExec': !exists(json, 'canExec') ? undefined : json['canExec'],
        'jobRuntimes': !exists(json, 'jobRuntimes') ? undefined : ((json['jobRuntimes'] as Array<any>).map(JobRuntimeFromJSON)),
        'jobWorkingDir': !exists(json, 'jobWorkingDir') ? undefined : json['jobWorkingDir'],
        'jobEnvVariables': !exists(json, 'jobEnvVariables') ? undefined : ((json['jobEnvVariables'] as Array<any>).map(KeyValuePairFromJSON)),
        'jobMaxJobs': !exists(json, 'jobMaxJobs') ? undefined : json['jobMaxJobs'],
        'jobMaxJobsPerUser': !exists(json, 'jobMaxJobsPerUser') ? undefined : json['jobMaxJobsPerUser'],
        'jobIsBatch': !exists(json, 'jobIsBatch') ? undefined : json['jobIsBatch'],
        'batchScheduler': !exists(json, 'batchScheduler') ? undefined : json['batchScheduler'],
        'batchLogicalQueues': !exists(json, 'batchLogicalQueues') ? undefined : ((json['batchLogicalQueues'] as Array<any>).map(LogicalQueueFromJSON)),
        'batchDefaultLogicalQueue': !exists(json, 'batchDefaultLogicalQueue') ? undefined : json['batchDefaultLogicalQueue'],
        'jobCapabilities': !exists(json, 'jobCapabilities') ? undefined : ((json['jobCapabilities'] as Array<any>).map(CapabilityFromJSON)),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'importRefId': !exists(json, 'importRefId') ? undefined : json['importRefId'],
        'deleted': !exists(json, 'deleted') ? undefined : json['deleted'],
        'created': !exists(json, 'created') ? undefined : json['created'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
    };
}

export function TSystemToJSON(value?: TSystem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'seqId': value.seqId,
        'tenant': value.tenant,
        'id': value.id,
        'description': value.description,
        'systemType': SystemTypeEnumToJSON(value.systemType),
        'owner': value.owner,
        'host': value.host,
        'enabled': value.enabled,
        'effectiveUserId': value.effectiveUserId,
        'defaultAuthnMethod': AuthnEnumToJSON(value.defaultAuthnMethod),
        'authnCredential': CredentialToJSON(value.authnCredential),
        'bucketName': value.bucketName,
        'rootDir': value.rootDir,
        'transferMethods': value.transferMethods === undefined ? undefined : ((value.transferMethods as Array<any>).map(TransferMethodEnumToJSON)),
        'port': value.port,
        'useProxy': value.useProxy,
        'proxyHost': value.proxyHost,
        'proxyPort': value.proxyPort,
        'dtnSystemId': value.dtnSystemId,
        'dtnMountPoint': value.dtnMountPoint,
        'dtnMountSourcePath': value.dtnMountSourcePath,
        'isDtn': value.isDtn,
        'canExec': value.canExec,
        'jobRuntimes': value.jobRuntimes === undefined ? undefined : ((value.jobRuntimes as Array<any>).map(JobRuntimeToJSON)),
        'jobWorkingDir': value.jobWorkingDir,
        'jobEnvVariables': value.jobEnvVariables === undefined ? undefined : ((value.jobEnvVariables as Array<any>).map(KeyValuePairToJSON)),
        'jobMaxJobs': value.jobMaxJobs,
        'jobMaxJobsPerUser': value.jobMaxJobsPerUser,
        'jobIsBatch': value.jobIsBatch,
        'batchScheduler': value.batchScheduler,
        'batchLogicalQueues': value.batchLogicalQueues === undefined ? undefined : ((value.batchLogicalQueues as Array<any>).map(LogicalQueueToJSON)),
        'batchDefaultLogicalQueue': value.batchDefaultLogicalQueue,
        'jobCapabilities': value.jobCapabilities === undefined ? undefined : ((value.jobCapabilities as Array<any>).map(CapabilityToJSON)),
        'tags': value.tags,
        'notes': value.notes,
        'importRefId': value.importRefId,
        'deleted': value.deleted,
        'created': value.created,
        'updated': value.updated,
    };
}


