/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Systems API
 * The Tapis Systems API provides for management of Tapis Systems including transfer methods, permissions and credentials.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AuthnEnum,
    AuthnEnumFromJSON,
    AuthnEnumFromJSONTyped,
    AuthnEnumToJSON,
    Capability,
    CapabilityFromJSON,
    CapabilityFromJSONTyped,
    CapabilityToJSON,
    TransferMethodEnum,
    TransferMethodEnumFromJSON,
    TransferMethodEnumFromJSONTyped,
    TransferMethodEnumToJSON,
} from './';

/**
 * 
 * @export
 * @interface ReqUpdateSystem
 */
export interface ReqUpdateSystem {
    /**
     * 
     * @type {string}
     * @memberof ReqUpdateSystem
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ReqUpdateSystem
     */
    host?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ReqUpdateSystem
     */
    enabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ReqUpdateSystem
     */
    effectiveUserId?: string;
    /**
     * 
     * @type {AuthnEnum}
     * @memberof ReqUpdateSystem
     */
    defaultAuthnMethod?: AuthnEnum;
    /**
     * 
     * @type {Array<TransferMethodEnum>}
     * @memberof ReqUpdateSystem
     */
    transferMethods?: Array<TransferMethodEnum>;
    /**
     * 
     * @type {number}
     * @memberof ReqUpdateSystem
     */
    port?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ReqUpdateSystem
     */
    useProxy?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ReqUpdateSystem
     */
    proxyHost?: string;
    /**
     * 
     * @type {number}
     * @memberof ReqUpdateSystem
     */
    proxyPort?: number;
    /**
     * 
     * @type {Array<Capability>}
     * @memberof ReqUpdateSystem
     */
    jobCapabilities?: Array<Capability>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReqUpdateSystem
     */
    tags?: Array<string>;
    /**
     * 
     * @type {object}
     * @memberof ReqUpdateSystem
     */
    notes?: object;
}

export function ReqUpdateSystemFromJSON(json: any): ReqUpdateSystem {
    return ReqUpdateSystemFromJSONTyped(json, false);
}

export function ReqUpdateSystemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqUpdateSystem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'host': !exists(json, 'host') ? undefined : json['host'],
        'enabled': !exists(json, 'enabled') ? undefined : json['enabled'],
        'effectiveUserId': !exists(json, 'effectiveUserId') ? undefined : json['effectiveUserId'],
        'defaultAuthnMethod': !exists(json, 'defaultAuthnMethod') ? undefined : AuthnEnumFromJSON(json['defaultAuthnMethod']),
        'transferMethods': !exists(json, 'transferMethods') ? undefined : ((json['transferMethods'] as Array<any>).map(TransferMethodEnumFromJSON)),
        'port': !exists(json, 'port') ? undefined : json['port'],
        'useProxy': !exists(json, 'useProxy') ? undefined : json['useProxy'],
        'proxyHost': !exists(json, 'proxyHost') ? undefined : json['proxyHost'],
        'proxyPort': !exists(json, 'proxyPort') ? undefined : json['proxyPort'],
        'jobCapabilities': !exists(json, 'jobCapabilities') ? undefined : ((json['jobCapabilities'] as Array<any>).map(CapabilityFromJSON)),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
    };
}

export function ReqUpdateSystemToJSON(value?: ReqUpdateSystem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'host': value.host,
        'enabled': value.enabled,
        'effectiveUserId': value.effectiveUserId,
        'defaultAuthnMethod': AuthnEnumToJSON(value.defaultAuthnMethod),
        'transferMethods': value.transferMethods === undefined ? undefined : ((value.transferMethods as Array<any>).map(TransferMethodEnumToJSON)),
        'port': value.port,
        'useProxy': value.useProxy,
        'proxyHost': value.proxyHost,
        'proxyPort': value.proxyPort,
        'jobCapabilities': value.jobCapabilities === undefined ? undefined : ((value.jobCapabilities as Array<any>).map(CapabilityToJSON)),
        'tags': value.tags,
        'notes': value.notes,
    };
}


