/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Files API
 * My API
 *
 * The version of the OpenAPI document: 0.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransferTaskChild
 */
export interface TransferTaskChild {
    /**
     * 
     * @type {number}
     * @memberof TransferTaskChild
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TransferTaskChild
     */
    tenantId?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTaskChild
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTaskChild
     */
    sourceURI?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTaskChild
     */
    destinationURI?: string;
    /**
     * 
     * @type {number}
     * @memberof TransferTaskChild
     */
    totalBytes?: number;
    /**
     * 
     * @type {number}
     * @memberof TransferTaskChild
     */
    bytesTransferred?: number;
    /**
     * 
     * @type {number}
     * @memberof TransferTaskChild
     */
    taskId?: number;
    /**
     * 
     * @type {string}
     * @memberof TransferTaskChild
     */
    errorMessage?: string;
    /**
     * 
     * @type {number}
     * @memberof TransferTaskChild
     */
    parentTaskId?: number;
    /**
     * 
     * @type {number}
     * @memberof TransferTaskChild
     */
    retries?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TransferTaskChild
     */
    dir?: boolean;
    /**
     * Unique ID of the task.
     * @type {string}
     * @memberof TransferTaskChild
     */
    uuid?: string;
    /**
     * The status of the task, such as ACCEPTED, IN_PROGRESS, COMPLETED, CANCELLED
     * @type {string}
     * @memberof TransferTaskChild
     */
    status?: TransferTaskChildStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof TransferTaskChild
     */
    created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TransferTaskChild
     */
    startTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TransferTaskChild
     */
    endTime?: Date;
}

/**
* @export
* @enum {string}
*/
export enum TransferTaskChildStatusEnum {
    Accepted = 'ACCEPTED',
    Staging = 'STAGING',
    Staged = 'STAGED',
    InProgress = 'IN_PROGRESS',
    Completed = 'COMPLETED',
    Cancelled = 'CANCELLED',
    Failed = 'FAILED',
    Paused = 'PAUSED'
}

export function TransferTaskChildFromJSON(json: any): TransferTaskChild {
    return TransferTaskChildFromJSONTyped(json, false);
}

export function TransferTaskChildFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferTaskChild {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'sourceURI': !exists(json, 'sourceURI') ? undefined : json['sourceURI'],
        'destinationURI': !exists(json, 'destinationURI') ? undefined : json['destinationURI'],
        'totalBytes': !exists(json, 'totalBytes') ? undefined : json['totalBytes'],
        'bytesTransferred': !exists(json, 'bytesTransferred') ? undefined : json['bytesTransferred'],
        'taskId': !exists(json, 'taskId') ? undefined : json['taskId'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'parentTaskId': !exists(json, 'parentTaskId') ? undefined : json['parentTaskId'],
        'retries': !exists(json, 'retries') ? undefined : json['retries'],
        'dir': !exists(json, 'dir') ? undefined : json['dir'],
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'startTime': !exists(json, 'startTime') ? undefined : (new Date(json['startTime'])),
        'endTime': !exists(json, 'endTime') ? undefined : (new Date(json['endTime'])),
    };
}

export function TransferTaskChildToJSON(value?: TransferTaskChild | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'tenantId': value.tenantId,
        'username': value.username,
        'sourceURI': value.sourceURI,
        'destinationURI': value.destinationURI,
        'totalBytes': value.totalBytes,
        'bytesTransferred': value.bytesTransferred,
        'taskId': value.taskId,
        'errorMessage': value.errorMessage,
        'parentTaskId': value.parentTaskId,
        'retries': value.retries,
        'dir': value.dir,
        'uuid': value.uuid,
        'status': value.status,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'startTime': value.startTime === undefined ? undefined : (value.startTime.toISOString()),
        'endTime': value.endTime === undefined ? undefined : (value.endTime.toISOString()),
    };
}


