/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Files API
 * My API
 *
 * The version of the OpenAPI document: 0.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransferTask
 */
export interface TransferTask {
    /**
     * 
     * @type {number}
     * @memberof TransferTask
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    tenantId?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    sourceSystemId?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    sourcePath?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    destinationSystemId?: string;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    destinationPath?: string;
    /**
     * 
     * @type {number}
     * @memberof TransferTask
     */
    totalBytes?: number;
    /**
     * 
     * @type {number}
     * @memberof TransferTask
     */
    bytesTransferred?: number;
    /**
     * 
     * @type {number}
     * @memberof TransferTask
     */
    retries?: number;
    /**
     * 
     * @type {string}
     * @memberof TransferTask
     */
    finalMessage?: string;
    /**
     * Unique ID of the task.
     * @type {string}
     * @memberof TransferTask
     */
    uuid?: string;
    /**
     * The status of the task, such as ACCEPTED, IN_PROGRESS, COMPLETED, CANCELLED
     * @type {string}
     * @memberof TransferTask
     */
    status?: string;
    /**
     * Timestamp in UTC of task creation.
     * @type {number}
     * @memberof TransferTask
     */
    created?: number;
}

export function TransferTaskFromJSON(json: any): TransferTask {
    return TransferTaskFromJSONTyped(json, false);
}

export function TransferTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'tenantId': !exists(json, 'tenantId') ? undefined : json['tenantId'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'sourceSystemId': !exists(json, 'sourceSystemId') ? undefined : json['sourceSystemId'],
        'sourcePath': !exists(json, 'sourcePath') ? undefined : json['sourcePath'],
        'destinationSystemId': !exists(json, 'destinationSystemId') ? undefined : json['destinationSystemId'],
        'destinationPath': !exists(json, 'destinationPath') ? undefined : json['destinationPath'],
        'totalBytes': !exists(json, 'totalBytes') ? undefined : json['totalBytes'],
        'bytesTransferred': !exists(json, 'bytesTransferred') ? undefined : json['bytesTransferred'],
        'retries': !exists(json, 'retries') ? undefined : json['retries'],
        'finalMessage': !exists(json, 'finalMessage') ? undefined : json['finalMessage'],
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'created': !exists(json, 'created') ? undefined : json['created'],
    };
}

export function TransferTaskToJSON(value?: TransferTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'tenantId': value.tenantId,
        'username': value.username,
        'sourceSystemId': value.sourceSystemId,
        'sourcePath': value.sourcePath,
        'destinationSystemId': value.destinationSystemId,
        'destinationPath': value.destinationPath,
        'totalBytes': value.totalBytes,
        'bytesTransferred': value.bytesTransferred,
        'retries': value.retries,
        'finalMessage': value.finalMessage,
        'uuid': value.uuid,
        'status': value.status,
        'created': value.created,
    };
}


