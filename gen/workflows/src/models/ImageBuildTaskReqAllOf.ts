/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Workflows API
 * Create and manage pipelines
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BuilderEnum,
    BuilderEnumFromJSON,
    BuilderEnumFromJSONTyped,
    BuilderEnumToJSON,
    ContextReq,
    ContextReqFromJSON,
    ContextReqFromJSONTyped,
    ContextReqToJSON,
    DestinationReq,
    DestinationReqFromJSON,
    DestinationReqFromJSONTyped,
    DestinationReqToJSON,
} from './';

/**
 * 
 * @export
 * @interface ImageBuildTaskReqAllOf
 */
export interface ImageBuildTaskReqAllOf {
    /**
     * 
     * @type {BuilderEnum}
     * @memberof ImageBuildTaskReqAllOf
     */
    builder?: BuilderEnum | null;
    /**
     * 
     * @type {boolean}
     * @memberof ImageBuildTaskReqAllOf
     */
    cache?: boolean;
    /**
     * 
     * @type {ContextReq}
     * @memberof ImageBuildTaskReqAllOf
     */
    context?: ContextReq;
    /**
     * 
     * @type {DestinationReq}
     * @memberof ImageBuildTaskReqAllOf
     */
    destination?: DestinationReq;
    /**
     * 
     * @type {any}
     * @memberof ImageBuildTaskReqAllOf
     */
    type?: any | null;
}

export function ImageBuildTaskReqAllOfFromJSON(json: any): ImageBuildTaskReqAllOf {
    return ImageBuildTaskReqAllOfFromJSONTyped(json, false);
}

export function ImageBuildTaskReqAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageBuildTaskReqAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'builder': !exists(json, 'builder') ? undefined : BuilderEnumFromJSON(json['builder']),
        'cache': !exists(json, 'cache') ? undefined : json['cache'],
        'context': !exists(json, 'context') ? undefined : ContextReqFromJSON(json['context']),
        'destination': !exists(json, 'destination') ? undefined : DestinationReqFromJSON(json['destination']),
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function ImageBuildTaskReqAllOfToJSON(value?: ImageBuildTaskReqAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'builder': BuilderEnumToJSON(value.builder),
        'cache': value.cache,
        'context': ContextReqToJSON(value.context),
        'destination': DestinationReqToJSON(value.destination),
        'type': value.type,
    };
}

