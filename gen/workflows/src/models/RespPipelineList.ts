/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Workflows API
 * Create and manage pipelines
 *
 * The version of the OpenAPI document: 1.6.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Pipeline,
    PipelineFromJSON,
    PipelineFromJSONTyped,
    PipelineToJSON,
    RespList,
    RespListFromJSON,
    RespListFromJSONTyped,
    RespListToJSON,
    RespPipelineListAllOf,
    RespPipelineListAllOfFromJSON,
    RespPipelineListAllOfFromJSONTyped,
    RespPipelineListAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface RespPipelineList
 */
export interface RespPipelineList {
    /**
     * 
     * @type {string}
     * @memberof RespPipelineList
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof RespPipelineList
     */
    message: string;
    /**
     * 
     * @type {Array<Pipeline>}
     * @memberof RespPipelineList
     */
    result: Array<Pipeline>;
    /**
     * 
     * @type {string}
     * @memberof RespPipelineList
     */
    version: string;
    /**
     * 
     * @type {object}
     * @memberof RespPipelineList
     */
    metadata: object;
}

export function RespPipelineListFromJSON(json: any): RespPipelineList {
    return RespPipelineListFromJSONTyped(json, false);
}

export function RespPipelineListFromJSONTyped(json: any, ignoreDiscriminator: boolean): RespPipelineList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'message': json['message'],
        'result': ((json['result'] as Array<any>).map(PipelineFromJSON)),
        'version': json['version'],
        'metadata': json['metadata'],
    };
}

export function RespPipelineListToJSON(value?: RespPipelineList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'message': value.message,
        'result': ((value.result as Array<any>).map(PipelineToJSON)),
        'version': value.version,
        'metadata': value.metadata,
    };
}

