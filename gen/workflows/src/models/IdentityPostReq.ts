/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Workflows API
 * Create and manage pipelines
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DockerhubAuthReq,
    DockerhubAuthReqFromJSON,
    DockerhubAuthReqFromJSONTyped,
    DockerhubAuthReqToJSON,
    GithubAuthReq,
    GithubAuthReqFromJSON,
    GithubAuthReqFromJSONTyped,
    GithubAuthReqToJSON,
    IdentityTypeEnum,
    IdentityTypeEnumFromJSON,
    IdentityTypeEnumFromJSONTyped,
    IdentityTypeEnumToJSON,
} from './';

/**
 * 
 * @export
 * @interface IdentityPostReq
 */
export interface IdentityPostReq {
    /**
     * 
     * @type {string}
     * @memberof IdentityPostReq
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof IdentityPostReq
     */
    description?: string;
    /**
     * 
     * @type {IdentityTypeEnum}
     * @memberof IdentityPostReq
     */
    type: IdentityTypeEnum;
    /**
     * 
     * @type {GithubAuthReq | DockerhubAuthReq}
     * @memberof IdentityPostReq
     */
    credentials?: GithubAuthReq | DockerhubAuthReq | null;
}

export function IdentityPostReqFromJSON(json: any): IdentityPostReq {
    return IdentityPostReqFromJSONTyped(json, false);
}

export function IdentityPostReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityPostReq {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'type': IdentityTypeEnumFromJSON(json['type']),
        'credentials': !exists(json, 'credentials') ? undefined : GithubAuthReq | DockerhubAuthReqFromJSON(json['credentials']),
    };
}

export function IdentityPostReqToJSON(value?: IdentityPostReq | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'type': IdentityTypeEnumToJSON(value.type),
        'credentials': GithubAuthReq | DockerhubAuthReqToJSON(value.credentials),
    };
}

