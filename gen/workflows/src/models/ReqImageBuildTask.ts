/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Workflows API
 * Create and manage pipelines
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EnumBuilder,
    EnumBuilderFromJSON,
    EnumBuilderFromJSONTyped,
    EnumBuilderToJSON,
    EnumTaskType,
    EnumTaskTypeFromJSON,
    EnumTaskTypeFromJSONTyped,
    EnumTaskTypeToJSON,
    ExecutionProfile,
    ExecutionProfileFromJSON,
    ExecutionProfileFromJSONTyped,
    ExecutionProfileToJSON,
    ReqBaseTask,
    ReqBaseTaskFromJSON,
    ReqBaseTaskFromJSONTyped,
    ReqBaseTaskToJSON,
    ReqContext,
    ReqContextFromJSON,
    ReqContextFromJSONTyped,
    ReqContextToJSON,
    ReqDestination,
    ReqDestinationFromJSON,
    ReqDestinationFromJSONTyped,
    ReqDestinationToJSON,
    ReqImageBuildTaskAllOf,
    ReqImageBuildTaskAllOfFromJSON,
    ReqImageBuildTaskAllOfFromJSONTyped,
    ReqImageBuildTaskAllOfToJSON,
    TaskDependency,
    TaskDependencyFromJSON,
    TaskDependencyFromJSONTyped,
    TaskDependencyToJSON,
} from './';

/**
 * 
 * @export
 * @interface ReqImageBuildTask
 */
export interface ReqImageBuildTask {
    /**
     * 
     * @type {string}
     * @memberof ReqImageBuildTask
     */
    id: string;
    /**
     * 
     * @type {EnumTaskType}
     * @memberof ReqImageBuildTask
     */
    type: EnumTaskType;
    /**
     * 
     * @type {Array<TaskDependency>}
     * @memberof ReqImageBuildTask
     */
    depends_on?: Array<TaskDependency>;
    /**
     * 
     * @type {string}
     * @memberof ReqImageBuildTask
     */
    description?: string;
    /**
     * 
     * @type {ExecutionProfile}
     * @memberof ReqImageBuildTask
     */
    execution_profile?: ExecutionProfile;
    /**
     * 
     * @type {object}
     * @memberof ReqImageBuildTask
     */
    input?: object;
    /**
     * 
     * @type {object}
     * @memberof ReqImageBuildTask
     */
    output?: object;
    /**
     * 
     * @type {EnumBuilder}
     * @memberof ReqImageBuildTask
     */
    builder?: EnumBuilder | null;
    /**
     * 
     * @type {boolean}
     * @memberof ReqImageBuildTask
     */
    cache?: boolean;
    /**
     * 
     * @type {ReqContext}
     * @memberof ReqImageBuildTask
     */
    context?: ReqContext;
    /**
     * 
     * @type {ReqDestination}
     * @memberof ReqImageBuildTask
     */
    destination?: ReqDestination;
}

export function ReqImageBuildTaskFromJSON(json: any): ReqImageBuildTask {
    return ReqImageBuildTaskFromJSONTyped(json, false);
}

export function ReqImageBuildTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqImageBuildTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': EnumTaskTypeFromJSON(json['type']),
        'depends_on': !exists(json, 'depends_on') ? undefined : ((json['depends_on'] as Array<any>).map(TaskDependencyFromJSON)),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'execution_profile': !exists(json, 'execution_profile') ? undefined : ExecutionProfileFromJSON(json['execution_profile']),
        'input': !exists(json, 'input') ? undefined : json['input'],
        'output': !exists(json, 'output') ? undefined : json['output'],
        'builder': !exists(json, 'builder') ? undefined : EnumBuilderFromJSON(json['builder']),
        'cache': !exists(json, 'cache') ? undefined : json['cache'],
        'context': !exists(json, 'context') ? undefined : ReqContextFromJSON(json['context']),
        'destination': !exists(json, 'destination') ? undefined : ReqDestinationFromJSON(json['destination']),
    };
}

export function ReqImageBuildTaskToJSON(value?: ReqImageBuildTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': EnumTaskTypeToJSON(value.type),
        'depends_on': value.depends_on === undefined ? undefined : ((value.depends_on as Array<any>).map(TaskDependencyToJSON)),
        'description': value.description,
        'execution_profile': ExecutionProfileToJSON(value.execution_profile),
        'input': value.input,
        'output': value.output,
        'builder': EnumBuilderToJSON(value.builder),
        'cache': value.cache,
        'context': ReqContextToJSON(value.context),
        'destination': ReqDestinationToJSON(value.destination),
    };
}

