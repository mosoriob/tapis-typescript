/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Workflows API
 * Create and manage pipelines
 *
 * The version of the OpenAPI document: 1.6.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EnumContextType,
    EnumContextTypeFromJSON,
    EnumContextTypeFromJSONTyped,
    EnumContextTypeToJSON,
    EnumContextVisibility,
    EnumContextVisibilityFromJSON,
    EnumContextVisibilityFromJSONTyped,
    EnumContextVisibilityToJSON,
} from './';

/**
 * 
 * @export
 * @interface Context
 */
export interface Context {
    /**
     * 
     * @type {string}
     * @memberof Context
     */
    branch?: string;
    /**
     * 
     * @type {any}
     * @memberof Context
     */
    credentials?: any | null;
    /**
     * 
     * @type {string}
     * @memberof Context
     */
    build_file_path?: string;
    /**
     * 
     * @type {string}
     * @memberof Context
     */
    sub_path?: string;
    /**
     * 
     * @type {EnumContextType}
     * @memberof Context
     */
    type: EnumContextType;
    /**
     * 
     * @type {string}
     * @memberof Context
     */
    url?: string;
    /**
     * 
     * @type {EnumContextVisibility}
     * @memberof Context
     */
    visibility?: EnumContextVisibility;
}

export function ContextFromJSON(json: any): Context {
    return ContextFromJSONTyped(json, false);
}

export function ContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): Context {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'branch': !exists(json, 'branch') ? undefined : json['branch'],
        'credentials': !exists(json, 'credentials') ? undefined : json['credentials'],
        'build_file_path': !exists(json, 'build_file_path') ? undefined : json['build_file_path'],
        'sub_path': !exists(json, 'sub_path') ? undefined : json['sub_path'],
        'type': EnumContextTypeFromJSON(json['type']),
        'url': !exists(json, 'url') ? undefined : json['url'],
        'visibility': !exists(json, 'visibility') ? undefined : EnumContextVisibilityFromJSON(json['visibility']),
    };
}

export function ContextToJSON(value?: Context | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'branch': value.branch,
        'credentials': value.credentials,
        'build_file_path': value.build_file_path,
        'sub_path': value.sub_path,
        'type': EnumContextTypeToJSON(value.type),
        'url': value.url,
        'visibility': EnumContextVisibilityToJSON(value.visibility),
    };
}

