/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Workflows API
 * Create and manage pipelines
 *
 * The version of the OpenAPI document: 1.6.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ETLActionFilter,
    ETLActionFilterFromJSON,
    ETLActionFilterFromJSONTyped,
    ETLActionFilterToJSON,
    ETLLocalInbox,
    ETLLocalInboxFromJSON,
    ETLLocalInboxFromJSONTyped,
    ETLLocalInboxToJSON,
    ETLLocalOutbox,
    ETLLocalOutboxFromJSON,
    ETLLocalOutboxFromJSONTyped,
    ETLLocalOutboxToJSON,
    ETLRemoteInbox,
    ETLRemoteInboxFromJSON,
    ETLRemoteInboxFromJSONTyped,
    ETLRemoteInboxToJSON,
    ETLRemoteOutbox,
    ETLRemoteOutboxFromJSON,
    ETLRemoteOutboxFromJSONTyped,
    ETLRemoteOutboxToJSON,
    TapisETLExtendedTapisJobDef,
    TapisETLExtendedTapisJobDefFromJSON,
    TapisETLExtendedTapisJobDefFromJSONTyped,
    TapisETLExtendedTapisJobDefToJSON,
} from './';

/**
 * 
 * @export
 * @interface ReqCreateETLPipelineAllOf
 */
export interface ReqCreateETLPipelineAllOf {
    /**
     * 
     * @type {string}
     * @memberof ReqCreateETLPipelineAllOf
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ReqCreateETLPipelineAllOf
     */
    description?: string;
    /**
     * 
     * @type {ETLActionFilter}
     * @memberof ReqCreateETLPipelineAllOf
     */
    before?: ETLActionFilter;
    /**
     * 
     * @type {ETLRemoteOutbox}
     * @memberof ReqCreateETLPipelineAllOf
     */
    remote_outbox: ETLRemoteOutbox;
    /**
     * 
     * @type {ETLLocalInbox}
     * @memberof ReqCreateETLPipelineAllOf
     */
    local_inbox: ETLLocalInbox;
    /**
     * 
     * @type {Array<TapisETLExtendedTapisJobDef>}
     * @memberof ReqCreateETLPipelineAllOf
     */
    jobs: Array<TapisETLExtendedTapisJobDef>;
    /**
     * 
     * @type {ETLLocalOutbox}
     * @memberof ReqCreateETLPipelineAllOf
     */
    local_outbox: ETLLocalOutbox;
    /**
     * 
     * @type {ETLRemoteInbox}
     * @memberof ReqCreateETLPipelineAllOf
     */
    remote_inbox: ETLRemoteInbox;
    /**
     * 
     * @type {ETLActionFilter}
     * @memberof ReqCreateETLPipelineAllOf
     */
    after?: ETLActionFilter;
}

export function ReqCreateETLPipelineAllOfFromJSON(json: any): ReqCreateETLPipelineAllOf {
    return ReqCreateETLPipelineAllOfFromJSONTyped(json, false);
}

export function ReqCreateETLPipelineAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqCreateETLPipelineAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'before': !exists(json, 'before') ? undefined : ETLActionFilterFromJSON(json['before']),
        'remote_outbox': ETLRemoteOutboxFromJSON(json['remote_outbox']),
        'local_inbox': ETLLocalInboxFromJSON(json['local_inbox']),
        'jobs': ((json['jobs'] as Array<any>).map(TapisETLExtendedTapisJobDefFromJSON)),
        'local_outbox': ETLLocalOutboxFromJSON(json['local_outbox']),
        'remote_inbox': ETLRemoteInboxFromJSON(json['remote_inbox']),
        'after': !exists(json, 'after') ? undefined : ETLActionFilterFromJSON(json['after']),
    };
}

export function ReqCreateETLPipelineAllOfToJSON(value?: ReqCreateETLPipelineAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'description': value.description,
        'before': ETLActionFilterToJSON(value.before),
        'remote_outbox': ETLRemoteOutboxToJSON(value.remote_outbox),
        'local_inbox': ETLLocalInboxToJSON(value.local_inbox),
        'jobs': ((value.jobs as Array<any>).map(TapisETLExtendedTapisJobDefToJSON)),
        'local_outbox': ETLLocalOutboxToJSON(value.local_outbox),
        'remote_inbox': ETLRemoteInboxToJSON(value.remote_inbox),
        'after': ETLActionFilterToJSON(value.after),
    };
}

