/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Workflows API
 * Create and manage pipelines
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ImageBuildTask,
    ImageBuildTaskFromJSON,
    ImageBuildTaskFromJSONTyped,
    ImageBuildTaskToJSON,
} from './';

/**
 * 
 * @export
 * @interface CIPipeline
 */
export interface CIPipeline {
    /**
     * 
     * @type {string}
     * @memberof CIPipeline
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CIPipeline
     */
    group?: string;
    /**
     * 
     * @type {string}
     * @memberof CIPipeline
     */
    owner?: string;
    /**
     * 
     * @type {string}
     * @memberof CIPipeline
     */
    uuid?: string;
    /**
     * 
     * @type {Array<ImageBuildTask>}
     * @memberof CIPipeline
     */
    tasks?: Array<ImageBuildTask>;
}

export function CIPipelineFromJSON(json: any): CIPipeline {
    return CIPipelineFromJSONTyped(json, false);
}

export function CIPipelineFromJSONTyped(json: any, ignoreDiscriminator: boolean): CIPipeline {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'group': !exists(json, 'group') ? undefined : json['group'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'tasks': !exists(json, 'tasks') ? undefined : ((json['tasks'] as Array<any>).map(ImageBuildTaskFromJSON)),
    };
}

export function CIPipelineToJSON(value?: CIPipeline | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'group': value.group,
        'owner': value.owner,
        'uuid': value.uuid,
        'tasks': value.tasks === undefined ? undefined : ((value.tasks as Array<any>).map(ImageBuildTaskToJSON)),
    };
}

