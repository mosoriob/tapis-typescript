/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Workflows API
 * Create and manage pipelines
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ContextCredentialsReq,
    ContextCredentialsReqFromJSON,
    ContextCredentialsReqFromJSONTyped,
    ContextCredentialsReqToJSON,
    ContextVisibilityEnum,
    ContextVisibilityEnumFromJSON,
    ContextVisibilityEnumFromJSONTyped,
    ContextVisibilityEnumToJSON,
    NonLocalContextReq,
    NonLocalContextReqFromJSON,
    NonLocalContextReqFromJSONTyped,
    NonLocalContextReqToJSON,
    RepoContextReqAllOf,
    RepoContextReqAllOfFromJSON,
    RepoContextReqAllOfFromJSONTyped,
    RepoContextReqAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface RepoContextReq
 */
export interface RepoContextReq {
    /**
     * 
     * @type {string}
     * @memberof RepoContextReq
     */
    type: string;
    /**
     * 
     * @type {ContextVisibilityEnum}
     * @memberof RepoContextReq
     */
    visibility: ContextVisibilityEnum;
    /**
     * 
     * @type {ContextCredentialsReq}
     * @memberof RepoContextReq
     */
    credentials?: ContextCredentialsReq;
    /**
     * 
     * @type {string}
     * @memberof RepoContextReq
     */
    identity_uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof RepoContextReq
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof RepoContextReq
     */
    branch: string;
    /**
     * 
     * @type {string}
     * @memberof RepoContextReq
     */
    build_file_path: string;
    /**
     * 
     * @type {string}
     * @memberof RepoContextReq
     */
    sub_path?: string;
}

export function RepoContextReqFromJSON(json: any): RepoContextReq {
    return RepoContextReqFromJSONTyped(json, false);
}

export function RepoContextReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): RepoContextReq {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'visibility': ContextVisibilityEnumFromJSON(json['visibility']),
        'credentials': !exists(json, 'credentials') ? undefined : ContextCredentialsReqFromJSON(json['credentials']),
        'identity_uuid': !exists(json, 'identity_uuid') ? undefined : json['identity_uuid'],
        'url': json['url'],
        'branch': json['branch'],
        'build_file_path': json['build_file_path'],
        'sub_path': !exists(json, 'sub_path') ? undefined : json['sub_path'],
    };
}

export function RepoContextReqToJSON(value?: RepoContextReq | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'visibility': ContextVisibilityEnumToJSON(value.visibility),
        'credentials': ContextCredentialsReqToJSON(value.credentials),
        'identity_uuid': value.identity_uuid,
        'url': value.url,
        'branch': value.branch,
        'build_file_path': value.build_file_path,
        'sub_path': value.sub_path,
    };
}

