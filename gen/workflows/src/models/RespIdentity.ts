/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Workflows API
 * Create and manage pipelines
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Identity,
    IdentityFromJSON,
    IdentityFromJSONTyped,
    IdentityToJSON,
    RespBase,
    RespBaseFromJSON,
    RespBaseFromJSONTyped,
    RespBaseToJSON,
    RespIdentityAllOf,
    RespIdentityAllOfFromJSON,
    RespIdentityAllOfFromJSONTyped,
    RespIdentityAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface RespIdentity
 */
export interface RespIdentity {
    /**
     * 
     * @type {string}
     * @memberof RespIdentity
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof RespIdentity
     */
    message: string;
    /**
     * 
     * @type {Identity}
     * @memberof RespIdentity
     */
    result: Identity;
    /**
     * 
     * @type {string}
     * @memberof RespIdentity
     */
    version: string;
    /**
     * 
     * @type {object}
     * @memberof RespIdentity
     */
    metadata: object;
}

export function RespIdentityFromJSON(json: any): RespIdentity {
    return RespIdentityFromJSONTyped(json, false);
}

export function RespIdentityFromJSONTyped(json: any, ignoreDiscriminator: boolean): RespIdentity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'message': json['message'],
        'result': IdentityFromJSON(json['result']),
        'version': json['version'],
        'metadata': json['metadata'],
    };
}

export function RespIdentityToJSON(value?: RespIdentity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'message': value.message,
        'result': IdentityToJSON(value.result),
        'version': value.version,
        'metadata': value.metadata,
    };
}

