/* tslint:disable */
/* eslint-disable */
/**
 * Tenants API
 * Manage Tapis Tenants.
 *
 * The version of the OpenAPI document: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReqCreateLdap
 */
export interface ReqCreateLdap {
    /**
     * Unique id for the LDAP object.
     * @type {string}
     * @memberof ReqCreateLdap
     */
    ldap_id: string;
    /**
     * url to the LDAP
     * @type {string}
     * @memberof ReqCreateLdap
     */
    url: string;
    /**
     * port for the LDAP
     * @type {number}
     * @memberof ReqCreateLdap
     */
    port: number;
    /**
     * Whether to use SSL with the LDAP
     * @type {boolean}
     * @memberof ReqCreateLdap
     */
    use_ssl: boolean;
    /**
     * base DN for users
     * @type {string}
     * @memberof ReqCreateLdap
     */
    user_dn: string;
    /**
     * DN used for binding to the LDAP.
     * @type {string}
     * @memberof ReqCreateLdap
     */
    bind_dn: string;
    /**
     * Pointed to a Tapis credential for binding to the LDAP.
     * @type {string}
     * @memberof ReqCreateLdap
     */
    bind_credential: string;
    /**
     * Whether this LDAP is used for service accounts or user accounts.
     * @type {string}
     * @memberof ReqCreateLdap
     */
    account_type: ReqCreateLdapAccountTypeEnum;
}

/**
* @export
* @enum {string}
*/
export enum ReqCreateLdapAccountTypeEnum {
    Service = 'service',
    User = 'user'
}

export function ReqCreateLdapFromJSON(json: any): ReqCreateLdap {
    return ReqCreateLdapFromJSONTyped(json, false);
}

export function ReqCreateLdapFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqCreateLdap {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ldap_id': json['ldap_id'],
        'url': json['url'],
        'port': json['port'],
        'use_ssl': json['use_ssl'],
        'user_dn': json['user_dn'],
        'bind_dn': json['bind_dn'],
        'bind_credential': json['bind_credential'],
        'account_type': json['account_type'],
    };
}

export function ReqCreateLdapToJSON(value?: ReqCreateLdap | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ldap_id': value.ldap_id,
        'url': value.url,
        'port': value.port,
        'use_ssl': value.use_ssl,
        'user_dn': value.user_dn,
        'bind_dn': value.bind_dn,
        'bind_credential': value.bind_credential,
        'account_type': value.account_type,
    };
}

