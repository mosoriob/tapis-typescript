/* tslint:disable */
/* eslint-disable */
/**
 * Tenants API
 * Manage Tapis Tenants.
 *
 * The version of the OpenAPI document: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReqCreateTenant
 */
export interface ReqCreateTenant {
    /**
     * The unique identifier for the tenant.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    tenant_id: string;
    /**
     * The base URL for the tenant.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    base_url: string;
    /**
     * The site for which the tenant belongs.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    site_id: string;
    /**
     * The resolvable location of the token service for the tenant.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    token_service: string;
    /**
     * The resolvable location of the security kernel for the tenant.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    security_kernel: string;
    /**
     * The resolvable location of the authenticator for the tenant.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    authenticator: string;
    /**
     * The email address of the primary owner and contact for the tenant.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    owner: string;
    /**
     * The username of the user that is automatically assigned the tenant_admin role by the Security Kernel.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    admin_user: string;
    /**
     * The list of services that are automatically granted the token_generator role for this tenant by the Security Kernel.
     * @type {Array<string>}
     * @memberof ReqCreateTenant
     */
    token_gen_services: Array<string>;
    /**
     * The unique identifier for the LDAP object for service accounts in the tenant.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    service_ldap_connection_id?: string;
    /**
     * The unique identifier for the LDAP object for user accounts in the tenant.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    user_ldap_connection_id?: string;
    /**
     * A description of the tenant.
     * @type {string}
     * @memberof ReqCreateTenant
     */
    description?: string;
}

export function ReqCreateTenantFromJSON(json: any): ReqCreateTenant {
    return ReqCreateTenantFromJSONTyped(json, false);
}

export function ReqCreateTenantFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqCreateTenant {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tenant_id': json['tenant_id'],
        'base_url': json['base_url'],
        'site_id': json['site_id'],
        'token_service': json['token_service'],
        'security_kernel': json['security_kernel'],
        'authenticator': json['authenticator'],
        'owner': json['owner'],
        'admin_user': json['admin_user'],
        'token_gen_services': json['token_gen_services'],
        'service_ldap_connection_id': !exists(json, 'service_ldap_connection_id') ? undefined : json['service_ldap_connection_id'],
        'user_ldap_connection_id': !exists(json, 'user_ldap_connection_id') ? undefined : json['user_ldap_connection_id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function ReqCreateTenantToJSON(value?: ReqCreateTenant | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tenant_id': value.tenant_id,
        'base_url': value.base_url,
        'site_id': value.site_id,
        'token_service': value.token_service,
        'security_kernel': value.security_kernel,
        'authenticator': value.authenticator,
        'owner': value.owner,
        'admin_user': value.admin_user,
        'token_gen_services': value.token_gen_services,
        'service_ldap_connection_id': value.service_ldap_connection_id,
        'user_ldap_connection_id': value.user_ldap_connection_id,
        'description': value.description,
    };
}

