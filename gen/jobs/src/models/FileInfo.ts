/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Jobs API
 * The Tapis Jobs API executes jobs on Tapis systems.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileInfo
 */
export interface FileInfo {
    /**
     * 
     * @type {string}
     * @memberof FileInfo
     */
    mimeType?: string;
    /**
     * 
     * @type {string}
     * @memberof FileInfo
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof FileInfo
     */
    owner?: string;
    /**
     * 
     * @type {string}
     * @memberof FileInfo
     */
    group?: string;
    /**
     * 
     * @type {string}
     * @memberof FileInfo
     */
    nativePermissions?: string;
    /**
     * 
     * @type {string}
     * @memberof FileInfo
     */
    url?: string;
    /**
     * 
     * @type {number}
     * @memberof FileInfo
     */
    lastModified?: number;
    /**
     * 
     * @type {string}
     * @memberof FileInfo
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof FileInfo
     */
    path?: string;
    /**
     * 
     * @type {number}
     * @memberof FileInfo
     */
    size?: number;
}

export function FileInfoFromJSON(json: any): FileInfo {
    return FileInfoFromJSONTyped(json, false);
}

export function FileInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mimeType': !exists(json, 'mimeType') ? undefined : json['mimeType'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'group': !exists(json, 'group') ? undefined : json['group'],
        'nativePermissions': !exists(json, 'nativePermissions') ? undefined : json['nativePermissions'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'lastModified': !exists(json, 'lastModified') ? undefined : json['lastModified'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'size': !exists(json, 'size') ? undefined : json['size'],
    };
}

export function FileInfoToJSON(value?: FileInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mimeType': value.mimeType,
        'type': value.type,
        'owner': value.owner,
        'group': value.group,
        'nativePermissions': value.nativePermissions,
        'url': value.url,
        'lastModified': value.lastModified,
        'name': value.name,
        'path': value.path,
        'size': value.size,
    };
}

