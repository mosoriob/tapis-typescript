/* tslint:disable */
/* eslint-disable */
/**
 * Abaco API
 * Abaco (Actor Based Containers) is an API and distributed computing platform funded by the National Science Foundation to provide Functions-as-a-service to the research computing community. Abaco leverages Docker containers and the Actor Model of Concurrent Computation to provide generic function primitives that are portable, composable and scalable.
 *
 * The version of the OpenAPI document: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ActorPermission
 */
export interface ActorPermission {
    /**
     * The username associated with the permission.
     * @type {string}
     * @memberof ActorPermission
     */
    user?: string;
    /**
     * The level associated with the permission.
     * @type {string}
     * @memberof ActorPermission
     */
    level?: ActorPermissionLevelEnum;
}

/**
* @export
* @enum {string}
*/
export enum ActorPermissionLevelEnum {
    Read = 'READ',
    Execute = 'EXECUTE',
    Write = 'WRITE'
}

export function ActorPermissionFromJSON(json: any): ActorPermission {
    return ActorPermissionFromJSONTyped(json, false);
}

export function ActorPermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActorPermission {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user': !exists(json, 'user') ? undefined : json['user'],
        'level': !exists(json, 'level') ? undefined : json['level'],
    };
}

export function ActorPermissionToJSON(value?: ActorPermission | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user': value.user,
        'level': value.level,
    };
}

