/* tslint:disable */
/* eslint-disable */
/**
 * Abaco API
 * Abaco (Actor Based Containers) is an API and distributed computing platform funded by the National Science Foundation to provide Functions-as-a-service to the research computing community. Abaco leverages Docker containers and the Actor Model of Concurrent Computation to provide generic function primitives that are portable, composable and scalable.
 *
 * The version of the OpenAPI document: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Alias
 */
export interface Alias {
    /**
     * Actual alias for the actor; must be unique within a tenant.
     * @type {string}
     * @memberof Alias
     */
    alias?: string;
    /**
     * The id for the actor associated with this alias.
     * @type {string}
     * @memberof Alias
     */
    actorId?: string;
    /**
     * The username of the owner of the alias.
     * @type {string}
     * @memberof Alias
     */
    owner?: string;
}

export function AliasFromJSON(json: any): Alias {
    return AliasFromJSONTyped(json, false);
}

export function AliasFromJSONTyped(json: any, ignoreDiscriminator: boolean): Alias {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': !exists(json, 'alias') ? undefined : json['alias'],
        'actorId': !exists(json, 'actorId') ? undefined : json['actorId'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
    };
}

export function AliasToJSON(value?: Alias | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'actorId': value.actorId,
        'owner': value.owner,
    };
}


