/* tslint:disable */
/* eslint-disable */
/**
 * Tokens API
 * Manage Tapis Tokens.
 *
 * The version of the OpenAPI document: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReqCreateToken
 */
export interface ReqCreateToken {
    /**
     * The type of account (user or service) represented by the token.
     * @type {string}
     * @memberof ReqCreateToken
     */
    account_type: ReqCreateTokenAccountTypeEnum;
    /**
     * The tenant associated with the token to be generated.
     * @type {string}
     * @memberof ReqCreateToken
     */
    token_tenant_id: string;
    /**
     * The username associated with the token to be generated.
     * @type {string}
     * @memberof ReqCreateToken
     */
    token_username: string;
    /**
     * The site_id for the site where this token will be used. Only used when account_type is "service". If not provided, the site_id for the token_tenant_id will be used.
     * @type {string}
     * @memberof ReqCreateToken
     */
    target_site_id?: string;
    /**
     * Whether the generated token should be a delegation token.
     * @type {boolean}
     * @memberof ReqCreateToken
     */
    delegation_token?: boolean;
    /**
     * The tenant_id associated with the subject who used a delegation authority in creating the delegation token.
     * @type {string}
     * @memberof ReqCreateToken
     */
    delegation_sub_tenant_id?: string;
    /**
     * The username associated with the subject who used a delegation authority in creating the delegation token.
     * @type {string}
     * @memberof ReqCreateToken
     */
    delegation_sub_username?: string;
    /**
     * The TTL, in seconds, for the generated token.
     * @type {number}
     * @memberof ReqCreateToken
     */
    access_token_ttl?: number;
    /**
     * Whether to also generate a refresh token.
     * @type {boolean}
     * @memberof ReqCreateToken
     */
    generate_refresh_token?: boolean;
    /**
     * The TTL, in seconds, for the refresh token (if generated).
     * @type {number}
     * @memberof ReqCreateToken
     */
    refresh_token_ttl?: number;
    /**
     * JSON object of additional claims to add to the standard claims issued with the token. Note - standard claims cannot be modified through this parameter.
     * @type {object}
     * @memberof ReqCreateToken
     */
    claims?: object;
}

/**
* @export
* @enum {string}
*/
export enum ReqCreateTokenAccountTypeEnum {
    User = 'user',
    Service = 'service'
}

export function ReqCreateTokenFromJSON(json: any): ReqCreateToken {
    return ReqCreateTokenFromJSONTyped(json, false);
}

export function ReqCreateTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqCreateToken {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'account_type': json['account_type'],
        'token_tenant_id': json['token_tenant_id'],
        'token_username': json['token_username'],
        'target_site_id': !exists(json, 'target_site_id') ? undefined : json['target_site_id'],
        'delegation_token': !exists(json, 'delegation_token') ? undefined : json['delegation_token'],
        'delegation_sub_tenant_id': !exists(json, 'delegation_sub_tenant_id') ? undefined : json['delegation_sub_tenant_id'],
        'delegation_sub_username': !exists(json, 'delegation_sub_username') ? undefined : json['delegation_sub_username'],
        'access_token_ttl': !exists(json, 'access_token_ttl') ? undefined : json['access_token_ttl'],
        'generate_refresh_token': !exists(json, 'generate_refresh_token') ? undefined : json['generate_refresh_token'],
        'refresh_token_ttl': !exists(json, 'refresh_token_ttl') ? undefined : json['refresh_token_ttl'],
        'claims': !exists(json, 'claims') ? undefined : json['claims'],
    };
}

export function ReqCreateTokenToJSON(value?: ReqCreateToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account_type': value.account_type,
        'token_tenant_id': value.token_tenant_id,
        'token_username': value.token_username,
        'target_site_id': value.target_site_id,
        'delegation_token': value.delegation_token,
        'delegation_sub_tenant_id': value.delegation_sub_tenant_id,
        'delegation_sub_username': value.delegation_sub_username,
        'access_token_ttl': value.access_token_ttl,
        'generate_refresh_token': value.generate_refresh_token,
        'refresh_token_ttl': value.refresh_token_ttl,
        'claims': value.claims,
    };
}


