/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Security API
 * The Tapis Security API provides access to the Tapis Security Kernel authorization and secrets facilities.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Options,
    OptionsFromJSON,
    OptionsFromJSONTyped,
    OptionsToJSON,
} from './';

/**
 * 
 * @export
 * @interface ReqWriteSecret
 */
export interface ReqWriteSecret {
    /**
     * 
     * @type {string}
     * @memberof ReqWriteSecret
     */
    tenant?: string;
    /**
     * 
     * @type {string}
     * @memberof ReqWriteSecret
     */
    user?: string;
    /**
     * 
     * @type {Options}
     * @memberof ReqWriteSecret
     */
    options?: Options;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ReqWriteSecret
     */
    data?: { [key: string]: string; };
}

export function ReqWriteSecretFromJSON(json: any): ReqWriteSecret {
    return ReqWriteSecretFromJSONTyped(json, false);
}

export function ReqWriteSecretFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqWriteSecret {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'user': !exists(json, 'user') ? undefined : json['user'],
        'options': !exists(json, 'options') ? undefined : OptionsFromJSON(json['options']),
        'data': !exists(json, 'data') ? undefined : json['data'],
    };
}

export function ReqWriteSecretToJSON(value?: ReqWriteSecret | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tenant': value.tenant,
        'user': value.user,
        'options': OptionsToJSON(value.options),
        'data': value.data,
    };
}


