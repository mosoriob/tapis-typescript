/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Security API
 * The Tapis Security API provides access to the Tapis Security Kernel authorization and secrets facilities.
 *
 * The version of the OpenAPI document: 0.1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SkRole
 */
export interface SkRole {
    /**
     * 
     * @type {number}
     * @memberof SkRole
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    tenant?: string;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    owner?: string;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    ownerTenant?: string;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    createdby?: string;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    createdbyTenant?: string;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    updated?: string;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    updatedby?: string;
    /**
     * 
     * @type {string}
     * @memberof SkRole
     */
    updatedbyTenant?: string;
}

export function SkRoleFromJSON(json: any): SkRole {
    return SkRoleFromJSONTyped(json, false);
}

export function SkRoleFromJSONTyped(json: any, ignoreDiscriminator: boolean): SkRole {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'ownerTenant': !exists(json, 'ownerTenant') ? undefined : json['ownerTenant'],
        'created': !exists(json, 'created') ? undefined : json['created'],
        'createdby': !exists(json, 'createdby') ? undefined : json['createdby'],
        'createdbyTenant': !exists(json, 'createdbyTenant') ? undefined : json['createdbyTenant'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
        'updatedby': !exists(json, 'updatedby') ? undefined : json['updatedby'],
        'updatedbyTenant': !exists(json, 'updatedbyTenant') ? undefined : json['updatedbyTenant'],
    };
}

export function SkRoleToJSON(value?: SkRole | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'tenant': value.tenant,
        'name': value.name,
        'description': value.description,
        'owner': value.owner,
        'ownerTenant': value.ownerTenant,
        'created': value.created,
        'createdby': value.createdby,
        'createdbyTenant': value.createdbyTenant,
        'updated': value.updated,
        'updatedby': value.updatedby,
        'updatedbyTenant': value.updatedbyTenant,
    };
}

