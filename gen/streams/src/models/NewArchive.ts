/* tslint:disable */
/* eslint-disable */
/**
 * Streams API
 * Manage Tapis Streams API.
 *
 * The version of the OpenAPI document: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    NewArchiveSettings,
    NewArchiveSettingsFromJSON,
    NewArchiveSettingsFromJSONTyped,
    NewArchiveSettingsToJSON,
} from './';

/**
 * 
 * @export
 * @interface NewArchive
 */
export interface NewArchive {
    /**
     * The type of archive object - system or chords
     * @type {string}
     * @memberof NewArchive
     */
    archive_type?: NewArchiveArchiveTypeEnum;
    /**
     * Owner of this archive
     * @type {string}
     * @memberof NewArchive
     */
    owner?: string;
    /**
     * 
     * @type {NewArchiveSettings}
     * @memberof NewArchive
     */
    settings?: NewArchiveSettings;
}

/**
* @export
* @enum {string}
*/
export enum NewArchiveArchiveTypeEnum {
    System = 'system',
    Chords = 'chords'
}

export function NewArchiveFromJSON(json: any): NewArchive {
    return NewArchiveFromJSONTyped(json, false);
}

export function NewArchiveFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewArchive {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'archive_type': !exists(json, 'archive_type') ? undefined : json['archive_type'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'settings': !exists(json, 'settings') ? undefined : NewArchiveSettingsFromJSON(json['settings']),
    };
}

export function NewArchiveToJSON(value?: NewArchive | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'archive_type': value.archive_type,
        'owner': value.owner,
        'settings': NewArchiveSettingsToJSON(value.settings),
    };
}

