/* tslint:disable */
/* eslint-disable */
/**
 * Streams API
 * Manage Tapis Streams API.
 *
 * The version of the OpenAPI document: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    BasicResponse,
    BasicResponseFromJSON,
    BasicResponseToJSON,
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models';

export interface ListMeasuredPropertiesRequest {
    query?: string;
    limit?: number;
    offset?: number;
}

/**
 * 
 */
export class MeasuredPropertiesApi extends runtime.BaseAPI {

    /**
     * List measured_properties.
     * List measured_properties.
     */
    async listMeasuredPropertiesRaw(requestParameters: ListMeasuredPropertiesRequest): Promise<runtime.ApiResponse<BasicResponse>> {
        const queryParameters: any = {};

        if (requestParameters.query !== undefined) {
            queryParameters['query'] = requestParameters.query;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.offset !== undefined) {
            queryParameters['offset'] = requestParameters.offset;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/measured_properties`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => BasicResponseFromJSON(jsonValue));
    }

    /**
     * List measured_properties.
     * List measured_properties.
     */
    async listMeasuredProperties(requestParameters: ListMeasuredPropertiesRequest): Promise<BasicResponse> {
        const response = await this.listMeasuredPropertiesRaw(requestParameters);
        return await response.value();
    }

}
