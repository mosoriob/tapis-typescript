/* tslint:disable */
/* eslint-disable */
/**
 * Streams API
 * Manage Tapis Streams API.
 *
 * The version of the OpenAPI document: 1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    RespTransferData,
    RespTransferDataFromJSON,
    RespTransferDataToJSON,
    Transfer,
    TransferFromJSON,
    TransferToJSON,
} from '../models';

export interface TransferDataRequest {
    transfer: Transfer;
}

/**
 * 
 */
export class TransferInstrumentDataApi extends runtime.BaseAPI {

    /**
     * Transfer an instruments data to a system
     * Transfer an instruments data to a system
     */
    async transferDataRaw(requestParameters: TransferDataRequest): Promise<runtime.ApiResponse<RespTransferData>> {
        if (requestParameters.transfer === null || requestParameters.transfer === undefined) {
            throw new runtime.RequiredError('transfer','Required parameter requestParameters.transfer was null or undefined when calling transferData.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v3/streams/transfer`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TransferToJSON(requestParameters.transfer),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => RespTransferDataFromJSON(jsonValue));
    }

    /**
     * Transfer an instruments data to a system
     * Transfer an instruments data to a system
     */
    async transferData(requestParameters: TransferDataRequest): Promise<RespTransferData> {
        const response = await this.transferDataRaw(requestParameters);
        return await response.value();
    }

}
