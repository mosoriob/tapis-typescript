/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Notifications API
 * The Tapis Notifications API provides for management of subscriptions and event publication
 *
 * The version of the OpenAPI document: 1.6.1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Event
 */
export interface Event {
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    source: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    subject?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    data?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    seriesId?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    timestamp: string;
    /**
     * 
     * @type {boolean}
     * @memberof Event
     */
    deleteSubscriptionsMatchingSubject?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    tenant?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    user?: string;
    /**
     * 
     * @type {string}
     * @memberof Event
     */
    uuid?: string;
}

export function EventFromJSON(json: any): Event {
    return EventFromJSONTyped(json, false);
}

export function EventFromJSONTyped(json: any, ignoreDiscriminator: boolean): Event {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'source': json['source'],
        'type': json['type'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'seriesId': !exists(json, 'seriesId') ? undefined : json['seriesId'],
        'timestamp': json['timestamp'],
        'deleteSubscriptionsMatchingSubject': !exists(json, 'deleteSubscriptionsMatchingSubject') ? undefined : json['deleteSubscriptionsMatchingSubject'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'user': !exists(json, 'user') ? undefined : json['user'],
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
    };
}

export function EventToJSON(value?: Event | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source': value.source,
        'type': value.type,
        'subject': value.subject,
        'data': value.data,
        'seriesId': value.seriesId,
        'timestamp': value.timestamp,
        'deleteSubscriptionsMatchingSubject': value.deleteSubscriptionsMatchingSubject,
        'tenant': value.tenant,
        'user': value.user,
        'uuid': value.uuid,
    };
}

