/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Notifications API
 * The Tapis Notifications API provides for management of subscriptions and event publication
 *
 * The version of the OpenAPI document: 1.6.1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RespSubscriptionsMetadata,
    RespSubscriptionsMetadataFromJSON,
    RespSubscriptionsMetadataFromJSONTyped,
    RespSubscriptionsMetadataToJSON,
    TapisSubscription,
    TapisSubscriptionFromJSON,
    TapisSubscriptionFromJSONTyped,
    TapisSubscriptionToJSON,
} from './';

/**
 * 
 * @export
 * @interface RespSubscriptions
 */
export interface RespSubscriptions {
    /**
     * 
     * @type {string}
     * @memberof RespSubscriptions
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof RespSubscriptions
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof RespSubscriptions
     */
    version?: string;
    /**
     * 
     * @type {string}
     * @memberof RespSubscriptions
     */
    commit?: string;
    /**
     * 
     * @type {string}
     * @memberof RespSubscriptions
     */
    build?: string;
    /**
     * 
     * @type {Array<TapisSubscription>}
     * @memberof RespSubscriptions
     */
    result?: Array<TapisSubscription>;
    /**
     * 
     * @type {RespSubscriptionsMetadata}
     * @memberof RespSubscriptions
     */
    metadata?: RespSubscriptionsMetadata;
}

export function RespSubscriptionsFromJSON(json: any): RespSubscriptions {
    return RespSubscriptionsFromJSONTyped(json, false);
}

export function RespSubscriptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RespSubscriptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : json['status'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'commit': !exists(json, 'commit') ? undefined : json['commit'],
        'build': !exists(json, 'build') ? undefined : json['build'],
        'result': !exists(json, 'result') ? undefined : ((json['result'] as Array<any>).map(TapisSubscriptionFromJSON)),
        'metadata': !exists(json, 'metadata') ? undefined : RespSubscriptionsMetadataFromJSON(json['metadata']),
    };
}

export function RespSubscriptionsToJSON(value?: RespSubscriptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'message': value.message,
        'version': value.version,
        'commit': value.commit,
        'build': value.build,
        'result': value.result === undefined ? undefined : ((value.result as Array<any>).map(TapisSubscriptionToJSON)),
        'metadata': RespSubscriptionsMetadataToJSON(value.metadata),
    };
}

