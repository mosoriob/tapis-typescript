/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Notifications API
 * The Tapis Notifications API provides for management of subscriptions and event publication
 *
 * The version of the OpenAPI document: 1.6.1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DeliveryTarget,
    DeliveryTargetFromJSON,
    DeliveryTargetFromJSONTyped,
    DeliveryTargetToJSON,
    Event,
    EventFromJSON,
    EventFromJSONTyped,
    EventToJSON,
} from './';

/**
 * 
 * @export
 * @interface Notification
 */
export interface Notification {
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    tenant?: string;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    subscriptionName?: string;
    /**
     * 
     * @type {DeliveryTarget}
     * @memberof Notification
     */
    deliveryTarget?: DeliveryTarget;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    eventUuid?: string;
    /**
     * 
     * @type {Event}
     * @memberof Notification
     */
    event?: Event;
    /**
     * 
     * @type {string}
     * @memberof Notification
     */
    created?: string;
}

export function NotificationFromJSON(json: any): Notification {
    return NotificationFromJSONTyped(json, false);
}

export function NotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notification {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'tenant': !exists(json, 'tenant') ? undefined : json['tenant'],
        'subscriptionName': !exists(json, 'subscriptionName') ? undefined : json['subscriptionName'],
        'deliveryTarget': !exists(json, 'deliveryTarget') ? undefined : DeliveryTargetFromJSON(json['deliveryTarget']),
        'eventUuid': !exists(json, 'eventUuid') ? undefined : json['eventUuid'],
        'event': !exists(json, 'event') ? undefined : EventFromJSON(json['event']),
        'created': !exists(json, 'created') ? undefined : json['created'],
    };
}

export function NotificationToJSON(value?: Notification | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uuid': value.uuid,
        'tenant': value.tenant,
        'subscriptionName': value.subscriptionName,
        'deliveryTarget': DeliveryTargetToJSON(value.deliveryTarget),
        'eventUuid': value.eventUuid,
        'event': EventToJSON(value.event),
        'created': value.created,
    };
}

