/* tslint:disable */
/* eslint-disable */
/**
 * Tapis Notifications API
 * The Tapis Notifications API provides for management of subscriptions and event publication
 *
 * The version of the OpenAPI document: 1.6.1
 * Contact: cicsupport@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DeliveryTarget,
    DeliveryTargetFromJSON,
    DeliveryTargetFromJSONTyped,
    DeliveryTargetToJSON,
} from './';

/**
 * 
 * @export
 * @interface ReqPatchSubscription
 */
export interface ReqPatchSubscription {
    /**
     * 
     * @type {string}
     * @memberof ReqPatchSubscription
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ReqPatchSubscription
     */
    typeFilter?: string;
    /**
     * 
     * @type {string}
     * @memberof ReqPatchSubscription
     */
    subjectFilter?: string;
    /**
     * 
     * @type {Array<DeliveryTarget>}
     * @memberof ReqPatchSubscription
     */
    deliveryTargets?: Array<DeliveryTarget>;
}

export function ReqPatchSubscriptionFromJSON(json: any): ReqPatchSubscription {
    return ReqPatchSubscriptionFromJSONTyped(json, false);
}

export function ReqPatchSubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqPatchSubscription {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'typeFilter': !exists(json, 'typeFilter') ? undefined : json['typeFilter'],
        'subjectFilter': !exists(json, 'subjectFilter') ? undefined : json['subjectFilter'],
        'deliveryTargets': !exists(json, 'deliveryTargets') ? undefined : ((json['deliveryTargets'] as Array<any>).map(DeliveryTargetFromJSON)),
    };
}

export function ReqPatchSubscriptionToJSON(value?: ReqPatchSubscription | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'typeFilter': value.typeFilter,
        'subjectFilter': value.subjectFilter,
        'deliveryTargets': value.deliveryTargets === undefined ? undefined : ((value.deliveryTargets as Array<any>).map(DeliveryTargetToJSON)),
    };
}

